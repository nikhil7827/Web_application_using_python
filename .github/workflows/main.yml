name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flask
          pip install pytest  # Ensure pytest is installed

      - name: Run Tests
        run: pytest

  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          docker build -t nikhil0708/flask-app:latest .
          docker push nikhil0708/flask-app:latest
  diploy:
      runs-on: ubuntu-latest
      needs: docker
      steps:    
      - name: Deploy to EC2
        env:
         PRIVATE_KEY: ${{ secrets.AWS_EC2_SSH_KEY }}
         HOST: 44.197.187.50
         USER: ec2-user
        run: |
         echo "$PRIVATE_KEY" > secrets.MY_PEM_FILE
         chmod 600 "secrets.MY_PEM_FILE"
         ssh -i secrets.MY_PEM_FILE -o StrictHostKeyChecking=no $ec2-user@$44.197.187.50 << 'EOF'
         echo "Pulling latest Docker image..."
         docker pull nikhil0708/flask-app:latest

         echo "Stopping running container if any..."
         docker ps -q | xargs -r docker stop

         echo "Removing old container if any..."
         docker ps -a -q | xargs -r docker rm

         echo "Running new container..."
         docker run -d -p 8080:8080 --name flask-app nikhil0708/flask-app:latest

         echo "Deployment Complete!"
         EOF


